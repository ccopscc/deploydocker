user nginx; # 以nginx用户运行worker进程
worker_processes auto; # 自动根据CPU核心数设置worker进程数
worker_cpu_affinity auto;         # 自动绑定worker进程到CPU核心
worker_rlimit_nofile 100000; # worker进程能打开的最大文件描述符数

error_log /var/log/nginx/error.log warn; # 错误日志路径和级别(warn)
pid /var/run/nginx.pid; # 主进程PID文件位置
include /usr/share/nginx/modules/*.conf;

events {
worker_connections 10240; # 每个worker进程的最大连接数
multi_accept on; # 一次性接受所有新连接
use epoll; # 使用epoll高效I/O模型(Linux)
}

http {
# 基础设置
include /etc/nginx/mime.types;
default_type application/octet-stream;
# 日志格式
log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                '$status $body_bytes_sent "$http_referer" '
                '"$http_user_agent" "$http_x_forwarded_for" '
                'rt=$request_time uct="$upstream_connect_time" uht="$upstream_header_time" urt="$upstream_response_time"';

access_log  /var/log/nginx/access.log  main buffer=32k flush=5s; # 访问日志缓冲写入

server_tokens off; # 隐藏 Nginx 版本号

# 反向代理
proxy_read_timeout 120s;    # 从后端服务器读取响应的超时
proxy_connect_timeout 120s; # 连接后端服务器的超时
proxy_send_timeout 120s;   # 向后端发送请求的超时
proxy_set_header Connection "";
proxy_set_header X-Forwarded-Host $host; # 实际主机名
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # 代理链 IP 追踪
proxy_set_header X-Forwarded-Proto $scheme; # 实际请求协议
proxy_set_header X-Real-IP $remote_addr; # 记录真实客户端 IP
underscores_in_headers on; # 允许 HTTP 头中包含下划线

# 代理缓冲区设置
proxy_buffering on; # 启用代理缓冲区
proxy_buffer_size 4k; # 单个缓冲区大小
proxy_buffers 8 4k; # 缓冲区数量和大小
proxy_busy_buffers_size 8k; # 忙碌时缓冲区大小
# proxy_temp_path /var/cache/nginx/proxy_temp; # 临时文件路径

# 性能优化参数
sendfile        on;                  # 启用sendfile零拷贝传输
tcp_nopush      on;                  # 仅在sendfile开启时有效，优化数据包发送
tcp_nodelay     on;                  # 禁用Nagle算法，提高实时性

keepalive_timeout  65;               # 长连接超时时间
keepalive_requests 10000;           # 单个长连接允许的最大请求数

client_max_body_size 50m;            # 客户端上传文件大小限制
client_body_timeout 60s;           # 请求体读取超时时间
client_body_buffer_size 128k;        # 请求体缓冲区大小
client_header_buffer_size 4k;        # 请求头缓冲区大小
large_client_header_buffers 4 16k;    # 大型请求头缓冲区

# FastCGI缓存设置,PHP需要配置
fastcgi_buffer_size 128k;          # 单个缓冲区大小
fastcgi_buffers 256 128k;          # 缓冲区数量和大小
fastcgi_busy_buffers_size 256k;    # 忙碌时缓冲区大小
fastcgi_temp_file_write_size 256k; # 临时文件写入大小
# fastcgi_cache_path /var/cache/nginx/fastcgi_cache levels=1:2 keys_zone=fastcgi_cache:100m inactive=60m; # FastCGI缓存路径
fastcgi_cache_key "$scheme$request_method$host$request_uri"; # 缓存键
fastcgi_cache_use_stale error timeout invalid_header updating http_500 http_503; # 缓存过期策略
fastcgi_cache_valid 200 301 302 10m; # 缓存有效期
fastcgi_cache_valid any 1m;        # 其他状态码缓存时间
fastcgi_cache_methods GET HEAD;    # 缓存请求方法

# 代理缓存设置
proxy_cache_path /var/cache/nginx/proxy_cache levels=1:2 keys_zone=proxy_cache:100m inactive=60m use_temp_path=off; # 代理缓存路径
proxy_cache_key "$scheme$proxy_host$request_uri"; # 缓存键
proxy_cache_valid 200 301 302 10m; # 缓存有效期
proxy_cache_valid 404 1m;          # 404缓存时间
proxy_cache_valid any 1m;          # 其他状态码缓存时间
proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504; # 缓存过期策略
proxy_cache_background_update on;  # 后台更新缓存
proxy_cache_lock on;               # 缓存锁
proxy_cache_lock_timeout 5s;       # 缓存锁超时
proxy_cache_revalidate on;         # 缓存重新验证

# 压缩设置
gzip on;                            # 启用gzip压缩
gzip_min_length 1k;                 # 最小压缩文件大小
gzip_comp_level 6;                  # 压缩级别(1-9)
gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
gzip_vary on;                       # 根据Accept-Encoding头返回不同内容
gzip_disable "MSIE [1-6]\.";        # 对旧版IE禁用压缩

# 缓存设置
open_file_cache max=100000 inactive=20s; # 缓存文件元信息
open_file_cache_valid 30s;          # 缓存有效检查间隔
open_file_cache_min_uses 2;         # 最少使用次数后才缓存
open_file_cache_errors on;          # 缓存错误信息

# 安全相关头部
add_header X-Frame-Options SAMEORIGIN;         # 防止点击劫持
add_header X-Content-Type-Options nosniff;     # 禁止MIME类型嗅探
add_header X-XSS-Protection "1; mode=block";   # XSS防护

# SSL优化配置(如果启用HTTPS)
# ssl_certificate /etc/nginx/ssl/*.ccops.cc_ccops.cc_P256/fullchain.cer;  # 默认证书路径
# ssl_certificate_key /etc/nginx/ssl/*.ccops.cc_ccops.cc_P256/private.key; # 默认私钥路径
ssl_session_cache shared:SSL:50m;              # SSL会话缓存
ssl_session_timeout 1d;                       # SSL会话超时时间
ssl_session_tickets off;                      # 禁用会话票证(更安全)
ssl_protocols TLSv1.2 TLSv1.3;                # 仅允许安全协议
ssl_prefer_server_ciphers on;                 # 服务器优选加密套件
ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
ssl_stapling on;                              # OCSP装订
ssl_stapling_verify on;                       # 验证OCSP响应
# ssl_dhparam /data/nginx/certs/dhparam.pem;    # DH参数文件

# 包含各站点的server配置
include /etc/nginx/conf.d/*.conf;
include /etc/nginx/sites-enabled/*;
# 1. 全局限流（防DDoS）
limit_req_zone $binary_remote_addr zone=global_rate:10m rate=100r/s;
# 默认服务器块(处理非法域名访问)
server {
  listen 80 default_server;
  listen [::]:80 default_server;
  server_name _;
  return 444;  # 直接关闭连接
}
# 健康检查
server {
  listen 80;
  server_name localhost;
  location /nginx_status {
    stub_status on;
    access_log off;
    error_log   off;
    allow 127.0.0.1;
    deny all;
    }
  }
}
